{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19547\\\\dev\\\\wtf_frontend\\\\src\\\\components\\\\inventory\\\\Inventory.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Table, Space } from 'antd';\nimport PostBike from './PostBike';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Inventory = () => {\n  _s();\n\n  const [bikes, setBikes] = useState([]);\n  const {\n    Column\n  } = Table;\n  const columns = [{\n    title: 'Year',\n    dataIndex: 'year',\n    key: 'year'\n  }, {\n    title: 'Make',\n    dataIndex: 'make',\n    key: 'make'\n  }, {\n    title: 'Model',\n    dataIndex: 'model',\n    key: 'model'\n  }, {\n    title: 'Color',\n    dataIndex: 'color',\n    key: 'color'\n  }, {\n    title: 'CC',\n    dataIndex: 'CC',\n    key: 'CC'\n  }, {\n    title: 'Miles',\n    dataIndex: 'miles',\n    key: 'miles'\n  }, {\n    title: 'Price',\n    dataIndex: 'price',\n    key: 'price'\n  }, {\n    title: 'NADA',\n    dataIndex: 'NADA',\n    key: 'NADA'\n  }, {\n    title: 'KBB',\n    dataIndex: 'KBB',\n    key: 'KBB'\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: record => /*#__PURE__*/_jsxDEV(Space, {\n      size: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(DeleteOutlined, {\n        onClick: () => deleteBike(record._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)\n  }];\n  useEffect(() => {\n    fetch('http://localhost:3000/bikes').then(res => res.json()).then(data => setBikes(data));\n  }, [bikes]);\n\n  const updateTable = () => {\n    fetch('http://localhost:3000/bikes').then(res => res.json()).then(data => setBikes(data));\n  };\n\n  const addKeyProp = tableData => {\n    const newTable = [];\n    let counter = 1;\n    tableData.forEach(data => {\n      newTable.push({ ...data,\n        key: counter\n      });\n      counter += 1;\n    });\n    return newTable;\n  };\n\n  const deleteBike = id => {\n    fetch('http://localhost:3000/bikes/' + id, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log('Deletion Success: ', data);\n    }).catch(error => {\n      console.error('Error: ', error);\n    });\n  }; // information such as sold, date listed, date sold, COGS, revenue, notes, customer, should be hidden. If user clicks icon show more, then a modal will appear with the info\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PostBike, {\n      updateTable: updateTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: addKeyProp(bikes),\n      columns: columns,\n      children: /*#__PURE__*/_jsxDEV(Column, {\n        title: \"Action\"\n      }, \"action\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Inventory, \"MTs2aPQBexMiKRwolMjsUIpAT6I=\");\n\n_c = Inventory;\nexport default Inventory;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"sources":["C:/Users/19547/dev/wtf_frontend/src/components/inventory/Inventory.jsx"],"names":["React","useEffect","useState","Table","Space","PostBike","DeleteOutlined","EditOutlined","Inventory","bikes","setBikes","Column","columns","title","dataIndex","key","render","record","deleteBike","_id","fetch","then","res","json","data","updateTable","addKeyProp","tableData","newTable","counter","forEach","push","id","method","headers","response","console","log","catch","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Table, Space } from 'antd'\r\nimport PostBike from './PostBike'\r\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons' \r\n\r\nconst Inventory = () => {\r\n    const [bikes, setBikes] = useState([])\r\n    const { Column } = Table;\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Year',\r\n            dataIndex: 'year',\r\n            key: 'year',\r\n        },\r\n        {\r\n            title: 'Make',\r\n            dataIndex: 'make',\r\n            key: 'make',\r\n        },\r\n        {\r\n            title: 'Model',\r\n            dataIndex: 'model',\r\n            key: 'model',\r\n        },\r\n        {\r\n            title: 'Color',\r\n            dataIndex: 'color',\r\n            key: 'color',\r\n        },\r\n        {\r\n            title: 'CC',\r\n            dataIndex: 'CC',\r\n            key: 'CC',\r\n        },\r\n        {\r\n            title: 'Miles',\r\n            dataIndex: 'miles',\r\n            key: 'miles',\r\n        },\r\n        {\r\n            title: 'Price',\r\n            dataIndex: 'price',\r\n            key: 'price',\r\n        },\r\n        {\r\n            title: 'NADA',\r\n            dataIndex: 'NADA',\r\n            key: 'NADA',\r\n        },\r\n        {\r\n            title: 'KBB',\r\n            dataIndex: 'KBB',\r\n            key: 'KBB',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (record) => (\r\n                <Space size=\"middle\">\r\n                    <DeleteOutlined onClick={()=> deleteBike(record._id)}/>\r\n                    <EditOutlined />\r\n                </Space>\r\n            )\r\n        }\r\n    ]\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:3000/bikes')\r\n            .then(res => res.json())\r\n            .then(data => setBikes(data))\r\n    }, [bikes])\r\n    \r\n\r\n    const updateTable = () => {\r\n        fetch('http://localhost:3000/bikes')\r\n            .then(res => res.json())\r\n            .then(data => setBikes(data))\r\n    }\r\n\r\n    const addKeyProp = (tableData) => {\r\n        const newTable = []\r\n        let counter = 1\r\n        tableData.forEach((data) => {\r\n            newTable.push({\r\n                ...data,\r\n                key: counter\r\n            })\r\n            counter += 1\r\n        })\r\n        return newTable\r\n    }\r\n\r\n    const deleteBike = (id) => {\r\n        fetch('http://localhost:3000/bikes/' + id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Deletion Success: ', data)\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error: ', error)\r\n            })\r\n    }\r\n    // information such as sold, date listed, date sold, COGS, revenue, notes, customer, should be hidden. If user clicks icon show more, then a modal will appear with the info\r\n\r\n    return (\r\n        <div>\r\n            <PostBike updateTable={updateTable} />\r\n            <Table dataSource={addKeyProp(bikes)} columns={columns}>\r\n                <Column\r\n                    title=\"Action\"\r\n                    key=\"action\"\r\n                />\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inventory\r\n"]},"metadata":{},"sourceType":"module"}
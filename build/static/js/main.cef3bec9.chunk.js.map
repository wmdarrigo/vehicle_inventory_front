{"version":3,"sources":["components/PostBike.jsx","components/UpdateBike.jsx","components/Inventory.jsx","App.js","reportWebVitals.js","index.js"],"names":["PostBike","setRefresh","useState","showForm","setShowForm","year","setYear","make","setMake","model","setModel","color","setColor","price","setPrice","COGS","setCOGS","KBB","setKBB","NADA","setNADA","notes","setNotes","miles","setMiles","CC","setCC","VIN","setVIN","dateListed","setDateListed","Option","Select","onClick","type","style","margin","title","visible","onOk","formData","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","onCancel","name","layout","labelCol","span","wrapperCol","initialValues","remember","autoComplete","Item","label","placeholder","value","onChange","e","target","width","TextArea","UpdateBike","selectedBike","setSelectedBike","_id","moment","Inventory","bikes","setBikes","refresh","Column","Table","columns","dataIndex","key","render","record","size","DeleteOutlined","deleteBike","EditOutlined","useEffect","res","id","dataSource","tableData","newTable","counter","forEach","push","addKeyProp","padding","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cef3bec9.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport { Modal, Button, Form, Input, DatePicker, InputNumber, Select } from 'antd';\r\n\r\nconst PostBike = ({setRefresh}) => {\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [year, setYear] = useState()\r\n    const [make, setMake] = useState('')\r\n    const [model, setModel] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [price, setPrice]= useState()\r\n    const [COGS, setCOGS] = useState()\r\n    const [KBB, setKBB] = useState()\r\n    const [NADA, setNADA] = useState()\r\n    const [notes, setNotes] = useState('')\r\n    const [miles, setMiles] = useState()\r\n    const [CC, setCC] = useState()\r\n    const [VIN, setVIN] = useState()\r\n    const [dateListed, setDateListed] = useState()\r\n    const { Option } = Select\r\n\r\n    const submitForm = () => {\r\n        setShowForm(false)\r\n\r\n        const formData = {\r\n            \"year\": year,\r\n            \"make\": make,\r\n            \"model\": model,\r\n            \"color\": color,\r\n            \"CC\": CC,\r\n            \"price\": price,\r\n            \"COGS\": COGS,\r\n            \"revenue\": 0,\r\n            \"NADA\": NADA,\r\n            \"KBB\": KBB,\r\n            \"miles\": miles,\r\n            \"VIN\": VIN,\r\n            \"notes\": notes,\r\n            \"dateListed\": dateListed,\r\n            \"dateSold\": null,\r\n            \"sold\": false,\r\n            \"customer\": null,\r\n            \"dealer\": null\r\n        }\r\n\r\n        console.log('color: ', color)\r\n\r\n        fetch('https://dealership-vehicle-inventory.herokuapp.com/bikes', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(formData),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Success: ', data)\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error: ', error)\r\n            })\r\n        setRefresh(true)\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        console.log('Canceled form')\r\n        setShowForm(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button \r\n                onClick={() => setShowForm(!showForm)} \r\n                type=\"primary\"\r\n                style={{ margin: '0px 50px' }}\r\n            >\r\n                Add vehicle\r\n            </Button>\r\n           <Modal \r\n                title=\"Add vehicle\" \r\n                visible={showForm} \r\n                onOk={submitForm} \r\n                onCancel={handleCancel} \r\n            >\r\n                <Form\r\n                    name=\"basic\"\r\n                    layout=\"vertical\"\r\n                    labelCol={{\r\n                        span: 8,\r\n                    }}\r\n                    wrapperCol={{\r\n                        span: 16,\r\n                    }}\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    autoComplete=\"off\"\r\n                    >\r\n                    <Form.Item\r\n                        label=\"Year\"\r\n                        name=\"year\"\r\n                    >\r\n                        <InputNumber \r\n                            type=\"number\"\r\n                            placeholder=\"Enter bike's year\"\r\n                            value={year}\r\n                            onChange={(value) => setYear(value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Make\"\r\n                        name=\"make\"\r\n                    >\r\n                        <Input \r\n                            placeholder=\"Enter make\"\r\n                            type=\"text\"\r\n                            value={make}\r\n                            onChange={(e) => setMake(e.target.value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Model\"\r\n                        name=\"model\"\r\n                    >\r\n                        <Input \r\n                            placeholder=\"Enter model\"\r\n                            value={model}\r\n                            type=\"text\"\r\n                            onChange={(e) => setModel(e.target.value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Color\"\r\n                        name=\"color\"\r\n                    >\r\n                        <Select style={{ width:120 }} onChange={(value)=>setColor(value)}>\r\n                            <Option value=\"black\">Black</Option>\r\n                            <Option value=\"blue\">Blue</Option>\r\n                            <Option value=\"burgundy\">Burgundy</Option>\r\n                            <Option value=\"green\">Green</Option>\r\n                            <Option value=\"grey\">Grey</Option>\r\n                            <Option value=\"orange\">Orange</Option>\r\n                            <Option value=\"purple\">Purple</Option>\r\n                            <Option value=\"red\">Red</Option>\r\n                            <Option value=\"white\">White</Option>\r\n                            <Option value=\"yellow\">Yellow</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"VIN\"\r\n                        name=\"vin\"\r\n                    >\r\n                        <Input \r\n                            placeholder=\"Enter VIN (optional)\"\r\n                            value={VIN}\r\n                            type=\"text\"\r\n                            onChange={(e) => setVIN(e.target.value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"CC\"\r\n                        name=\"cc\"\r\n                    >\r\n                        <InputNumber \r\n                            placeholder=\"Enter CC of engine\"\r\n                            value={CC}\r\n                            onChange={(value) => setCC(value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Miles\"\r\n                        name=\"miles\"\r\n                    >\r\n                        <InputNumber\r\n                            placeholder=\"Enter miles\"\r\n                            value={miles}\r\n                            onChange={(value) => setMiles(value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Date Listed\"\r\n                        name=\"dateListed\"\r\n                    >\r\n                        <DatePicker \r\n                            placeholder=\"Enter date of stock \"\r\n                            value={dateListed}\r\n                            onChange={(value) => setDateListed(value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"COGS\"\r\n                        name=\"cogs\"\r\n                    >\r\n                        <InputNumber \r\n                            placeholder=\"Cost of goods sold (bike)\"\r\n                            value={COGS}\r\n                            onChange={(value) => setCOGS(value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"KBB Price\"\r\n                        name=\"kbb\"\r\n                    >\r\n                        <InputNumber \r\n                            placeholder=\"Blue book price\"\r\n                            value={KBB}\r\n                            onChange={(value) => setKBB(value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"NADA Price\"\r\n                        name=\"nada\"\r\n                    >\r\n                        <InputNumber \r\n                            placeholder=\"NADA price\"\r\n                            value={NADA}\r\n                            onChange={(value) => setNADA(value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Sales Price\"\r\n                        name=\"price\"\r\n                    >\r\n                        <InputNumber \r\n                            placeholder=\"Enter sales price\"\r\n                            value={price}\r\n                            onChange={(value) => setPrice(value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Notes\"\r\n                        name=\"notes\"\r\n                    >\r\n                        <Input.TextArea \r\n                            placeholder=\"Enter notes here\"\r\n                            value={notes}\r\n                            onChange={(e) => setNotes(e.target.value)}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n           </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostBike\r\n","import React, { useState } from 'react'\r\nimport { Modal, Form, Input, DatePicker, InputNumber, Select } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst UpdateBike = ({showForm, setShowForm, selectedBike, setRefresh, setSelectedBike}) => {\r\n    const [year, setYear] = useState(selectedBike.year)\r\n    const [make, setMake] = useState(selectedBike.make)\r\n    const [model, setModel] = useState(selectedBike.model)\r\n    const [color, setColor] = useState(selectedBike.color)\r\n    const [price, setPrice]= useState(selectedBike.price)\r\n    const [COGS, setCOGS] = useState(selectedBike.COGS)\r\n    const [KBB, setKBB] = useState(selectedBike.KBB)\r\n    const [NADA, setNADA] = useState(selectedBike.NADA)\r\n    const [notes, setNotes] = useState(selectedBike.notes)\r\n    const [miles, setMiles] = useState(selectedBike.miles)\r\n    const [CC, setCC] = useState(selectedBike.CC)\r\n    const [VIN, setVIN] = useState(selectedBike.VIN)\r\n    const [dateListed, setDateListed] = useState(selectedBike.dateListed)\r\n    const { Option } = Select\r\n\r\n    const submitForm = () => {\r\n        setShowForm(false)\r\n\r\n        const formData = {\r\n            \"year\": year,\r\n            \"make\": make,\r\n            \"model\": model,\r\n            \"color\": color,\r\n            \"CC\": CC,\r\n            \"price\": price,\r\n            \"COGS\": COGS,\r\n            \"revenue\": 0,\r\n            \"NADA\": NADA,\r\n            \"KBB\": KBB,\r\n            \"miles\": miles,\r\n            \"VIN\": VIN,\r\n            \"notes\": notes,\r\n            \"dateListed\": dateListed,\r\n            \"dateSold\": null,\r\n            \"sold\": false,\r\n            \"customer\": null,\r\n            \"dealer\": null\r\n        }\r\n\r\n        console.log('color: ', color)\r\n\r\n        fetch('https://dealership-vehicle-inventory.herokuapp.com/bikes' + selectedBike._id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(formData),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Success: ', data)\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error: ', error)\r\n            })\r\n\r\n        setRefresh(true)\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        console.log('Canceled form')\r\n        setSelectedBike(null)\r\n        setShowForm(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <Modal \r\n                title=\"Add vehicle\" \r\n                visible={showForm} \r\n                onOk={submitForm} \r\n                onCancel={handleCancel} \r\n            >\r\n                <Form\r\n                    name=\"basic\"\r\n                    layout=\"vertical\"\r\n                    labelCol={{\r\n                        span: 8,\r\n                    }}\r\n                    wrapperCol={{\r\n                        span: 16,\r\n                    }}\r\n                    initialValues={{\r\n                        \"year\": year,\r\n                        \"make\": make,\r\n                        \"model\": model,\r\n                        \"color\": color,\r\n                        \"CC\": CC,\r\n                        \"price\": price,\r\n                        \"COGS\": COGS,\r\n                        \"NADA\": NADA,\r\n                        \"KBB\": KBB,\r\n                        \"miles\": miles,\r\n                        \"VIN\": VIN,\r\n                        \"notes\": notes,\r\n                        \"dateListed\": moment(dateListed, 'YYYY/MM/DD')\r\n                    }}\r\n                    autoComplete=\"off\"\r\n                    >\r\n                    <Form.Item\r\n                        label=\"Year\"\r\n                        name=\"year\"\r\n                    >\r\n                        <InputNumber \r\n                            type=\"number\"\r\n                            placeholder=\"Enter bike's year\"\r\n                            value={year}\r\n                            onChange={(value) => setYear(value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Make\"\r\n                        name=\"make\"\r\n                    >\r\n                        <Input \r\n                            placeholder=\"Enter make\"\r\n                            type=\"text\"\r\n                            value={make}\r\n                            onChange={(e) => setMake(e.target.value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Model\"\r\n                        name=\"model\"\r\n                    >\r\n                        <Input \r\n                            placeholder=\"Enter model\"\r\n                            value={model}\r\n                            type=\"text\"\r\n                            onChange={(e) => setModel(e.target.value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Color\"\r\n                        name=\"color\"\r\n                    >\r\n                        <Select style={{ width:120 }} onChange={(value)=>setColor(value)}>\r\n                            <Option value=\"black\">Black</Option>\r\n                            <Option value=\"blue\">Blue</Option>\r\n                            <Option value=\"burgundy\">Burgundy</Option>\r\n                            <Option value=\"green\">Green</Option>\r\n                            <Option value=\"grey\">Grey</Option>\r\n                            <Option value=\"orange\">Orange</Option>\r\n                            <Option value=\"purple\">Purple</Option>\r\n                            <Option value=\"red\">Red</Option>\r\n                            <Option value=\"white\">White</Option>\r\n                            <Option value=\"yellow\">Yellow</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"VIN\"\r\n                        name=\"VIN\"\r\n                    >\r\n                        <Input \r\n                            placeholder=\"Enter VIN (optional)\"\r\n                            value={VIN}\r\n                            type=\"text\"\r\n                            onChange={(e) => setVIN(e.target.value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"CC\"\r\n                        name=\"CC\"\r\n                    >\r\n                        <InputNumber \r\n                            placeholder=\"Enter CC of engine\"\r\n                            value={CC}\r\n                            onChange={(value) => setCC(value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Miles\"\r\n                        name=\"miles\"\r\n                    >\r\n                        <InputNumber\r\n                            placeholder=\"Enter miles\"\r\n                            value={miles}\r\n                            onChange={(value) => setMiles(value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Date Listed\"\r\n                        name=\"dateListed\"\r\n                    >\r\n                        <DatePicker \r\n                            placeholder=\"Enter date of stock \"\r\n                            value={dateListed}\r\n                            onChange={(value) => setDateListed(value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"COGS\"\r\n                        name=\"COGS\"\r\n                    >\r\n                        <InputNumber \r\n                            placeholder=\"Cost of goods sold (bike)\"\r\n                            value={COGS}\r\n                            onChange={(value) => setCOGS(value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"KBB Price\"\r\n                        name=\"KBB\"\r\n                    >\r\n                        <InputNumber \r\n                            placeholder=\"Blue book price\"\r\n                            value={KBB}\r\n                            onChange={(value) => setKBB(value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"NADA Price\"\r\n                        name=\"NADA\"\r\n                    >\r\n                        <InputNumber \r\n                            placeholder=\"NADA price\"\r\n                            value={NADA}\r\n                            onChange={(value) => setNADA(value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Sales Price\"\r\n                        name=\"price\"\r\n                    >\r\n                        <InputNumber \r\n                            placeholder=\"Enter sales price\"\r\n                            value={price}\r\n                            onChange={(value) => setPrice(value)}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Notes\"\r\n                        name=\"notes\"\r\n                    >\r\n                        <Input.TextArea \r\n                            placeholder=\"Enter notes here\"\r\n                            value={notes}\r\n                            onChange={(e) => setNotes(e.target.value)}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n           </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateBike\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Table, Space } from 'antd'\r\nimport PostBike from './PostBike'\r\nimport UpdateBike from './UpdateBike'\r\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons' \r\n\r\nconst Inventory = () => {\r\n    const [bikes, setBikes] = useState([])\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [selectedBike, setSelectedBike] = useState(null)\r\n    const [refresh, setRefresh] = useState(false)\r\n    const { Column } = Table;\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Year',\r\n            dataIndex: 'year',\r\n            key: 'year',\r\n        },\r\n        {\r\n            title: 'Make',\r\n            dataIndex: 'make',\r\n            key: 'make',\r\n        },\r\n        {\r\n            title: 'Model',\r\n            dataIndex: 'model',\r\n            key: 'model',\r\n        },\r\n        {\r\n            title: 'Color',\r\n            dataIndex: 'color',\r\n            key: 'color',\r\n        },\r\n        {\r\n            title: 'CC',\r\n            dataIndex: 'CC',\r\n            key: 'CC',\r\n        },\r\n        {\r\n            title: 'Miles',\r\n            dataIndex: 'miles',\r\n            key: 'miles',\r\n        },\r\n        {\r\n            title: 'Price',\r\n            dataIndex: 'price',\r\n            key: 'price',\r\n        },\r\n        {\r\n            title: 'NADA',\r\n            dataIndex: 'NADA',\r\n            key: 'NADA',\r\n        },\r\n        {\r\n            title: 'KBB',\r\n            dataIndex: 'KBB',\r\n            key: 'KBB',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (record) => (\r\n                <Space size=\"middle\">\r\n                    <DeleteOutlined onClick={()=> deleteBike(record._id)}/>\r\n                    <EditOutlined onClick={()=> {\r\n                        setSelectedBike(record)\r\n                        setShowForm(!showForm)\r\n                    }}/>\r\n                </Space>\r\n            )\r\n        }\r\n    ]\r\n\r\n    useEffect(() => {\r\n        fetch('https://dealership-vehicle-inventory.herokuapp.com/bikes')\r\n            .then(res => res.json())\r\n            .then(data => setBikes(data))\r\n        setRefresh(false)\r\n    }, [refresh])\r\n\r\n    const addKeyProp = (tableData) => {\r\n        const newTable = []\r\n        let counter = 1\r\n        tableData.forEach((data) => {\r\n            newTable.push({\r\n                ...data,\r\n                key: counter\r\n            })\r\n            counter += 1\r\n        })\r\n        return newTable\r\n    }\r\n\r\n    const deleteBike = (id) => {\r\n        fetch('https://dealership-vehicle-inventory.herokuapp.com/bikes' + id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Deletion Success: ', data)\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error: ', error)\r\n            })\r\n        setRefresh(true)\r\n    }\r\n    // information such as sold, date listed, date sold, COGS, revenue, notes, customer, should be hidden. If user clicks icon show more, then a modal will appear with the info\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                selectedBike &&\r\n                        <UpdateBike \r\n                            showForm={showForm} \r\n                            setShowForm={setShowForm} \r\n                            setRefresh={setRefresh}\r\n                            selectedBike={selectedBike}\r\n                            setSelectedBike={setSelectedBike} \r\n                        />\r\n            }\r\n            <Table \r\n                dataSource={addKeyProp(bikes)} \r\n                columns={columns}\r\n                style={{ padding: '20px 50px' }}\r\n            >\r\n                <Column\r\n                    title=\"Action\"\r\n                    key=\"action\"\r\n                />\r\n            </Table>\r\n            <PostBike setRefresh={setRefresh} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inventory\r\n","import React from \"react\"\nimport Inventory from \"./components/Inventory\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Inventory />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\nimport './index.css'; // any css library put below will take precedence over default styles\n\n\nReactDOM.render(\n // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}